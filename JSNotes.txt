ES5:

	1. ‘USE STRICT’ DIRECTIVE: The earlier versions of JS allow the usage of undeclared variables. But when the es5 ‘use strict’ feature is used, an error is reported.
	
	2. NEW METHODS IN AN ARRAY 
		isArray(): This method checks if the object is an array or not and returns the result in true or false.
		
		forEach(): It executes the function for every element found in the array.
		
		map(): The map() method creates a new array by mapping every element of the array (on which the map is used).
		
		filter(): It creates a new array that contains elements which got filtered by making array elements pass some condition.
		
		reduce(): It applies a function to each element in an array and reduces the array to a single element.
		
		reduceRight(): It is quite same to reduce method, except for the traversal that happens from right to left.
		
		every(): This method checks a condition with every element of an array and if every element satisfies then returns true if at least one element doesn’t satisfy the condition then returns false.
		
		some(): It is same as every() method wherein some() checks for at least one element that gets satisfied with the condition and if found returns true and if none satisfies then false.
		
		indexOf(): Returns the index of the first match in an array. If not found then returns -1.
		
		lastIndexOf(): Same as indexOf but checks and returns from the other end of an array.
		
		parse(): It parses a JSON string that is like an object.
		
		stringify(): This method converts an object to a JSON string.
		
		now(): The now() method returns the number of milliseconds elapsed since 01-Jan-1970 UTC.
		
		valueOf(): It returns the primitive value of a date object.
		
		
ES6:

	1. LET & CONST: Till ES5, JS has only function scope and global scope with the introduction of let keyword in ES6, JS can now have block scope.
	
	2. FOR..OF:  for...of is an alternative for both for...in and forEach() and loops iterable data structures like Arrays, Maps, Sets, and strings.
	
	3. DEFAULT PARAMETERS: Provides default values to function parameters if no value or undefined is passed.
	
	4. REST OPERATOR: Rest Operator is used to handle function parameters. It uses three dots as its syntax (i.e …).
	
	5. SPREAD OPERATOR: Spread Operator is used with arrays and its syntax is exactly the same as that of Rest Operator (ie …). It is used to split the contents of an array.
	
	6. DESTRUCTURING: Destructuring helps in unpacking values from an array or an object.
	
	7. TEMPLATE LITERALS/STRINGS: It allows embedded expressions, which makes print statements easy.
	
	8. ARROW FUNCTIONS: Arrow Functions use => as its token and so are also called as Fat Arrow Functions. They are one line functions and are much like Lambda functions in programming languages like Java 8 and Python. Prior to =>, JS has a function keyword.
	
	9. PROMISES:
				Promises are introduced in ES6 to handle Asynchronous Programming in a more elegant way. Before Promises, async calls were handled by Callbacks. Promises resolved the Call Back Hell.
	10. CLASSES:
				The Objects in Javascript are based on Prototypes and follows Prototypal Inheritance. But in ES6 the keyword class is introduced that makes the approach very easy.
				
	11. Other features in ES6 include:
				Set, WeakSet, Map, WeakMap
				Generators
				Symbols
				Unicode
				Modules
				Proxies
				Built-Ins
				Binary and Octal
				Reflect
				Tail Call Optimization
	

ES7:
	ES7 or ECMAScript 2016 was released in the year 2016. This version gives suitable alternatives to already used functionalities.
	
	1. EXPONENTIATION OPERATOR (**):
				ES7 added an exponentiation operator (**) to already JavaScript supported arithmetic operations like +,-,*. This operator raises the first operand to the power second operand.
				
	2. INCLUDES(): 
				Returns true if an array includes a value, if not returns false.
				
	
	
ES8:
	ES8 or ECMAScript 2017 was released in the year 2017. This version allows new methods of coding with JavaScript.
	
	1. PADSTART():
				This method pads a string with another string at the beginning.
				
	2. PADEND():
				This method pads a string with another string and makes the resulting string reach a given length. It adds spaces at the end of the string.
				
	3. ASYNC/AWAIT:
				Await operator, applied only inside an async function, waits to be rejected or resolved by a promise.

	4. OBJECT.ENTRIES():
				It returns an array that contains the key-value pairs of a given object as an array.
				
	5. TRAILING COMMAS:
				A trailing comma is simply a comma that comes at the end of the last item in a list.
				
	6. OBJECT.VALUES():
				It returns an array of a given object’s own enumerable property values.
				
				
ES9:
	ES9 or ECMAScript 2018 is the latest update and was released in the year 2018.
		
	1. ASYNCHRONOUS ITERATION:
				An async iterable object can be used as a loop iteration with the help of for-await-of.
				
	2. The 9th edition, or ECMAScript 2018, was finalized in June 2018.[22] New features include the spread operator, rest parameters, asynchronous iteration, Promise.prototype.finally and additions to RegExp.

		let object = {a: 1, b: 2}

		let objectClone = Object.assign({}, object) // before ES9
		let objectClone = {...object} // ES9 syntax

		let otherObject = {c: 3, ...object}
		console.log(otherObject) // -> {c: 3, a: 1, b: 2}

=======================================================================================


	JAVASCRIPT RUNTIME
	Execution Context
	Call Stack
	Event Loop
	Hoisting
	Datatypes
	Variable Scopes(let, var, const)
	setTimeout(), setInterval(),
	callBack, Promise,
	async,await
	unshift vs push
	Shallow copy Vs Deep copy


